// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"
)

// IUserHandler is an autogenerated mock type for the IUserHandler type
type IUserHandler struct {
	mock.Mock
}

// Create provides a mock function with given fields: c
func (_m *IUserHandler) Create(c *gin.Context) {
	_m.Called(c)
}

// Delete provides a mock function with given fields: c
func (_m *IUserHandler) Delete(c *gin.Context) {
	_m.Called(c)
}

// GetAll provides a mock function with given fields: c
func (_m *IUserHandler) GetAll(c *gin.Context) {
	_m.Called(c)
}

// GetByNickName provides a mock function with given fields: c
func (_m *IUserHandler) GetByNickName(c *gin.Context) {
	_m.Called(c)
}

// NewIUserHandler creates a new instance of IUserHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIUserHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *IUserHandler {
	mock := &IUserHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
