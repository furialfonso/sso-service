// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"
	dto "cow_sso/pkg/integration/team/dto"

	mock "github.com/stretchr/testify/mock"
)

// ITeamClient is an autogenerated mock type for the ITeamClient type
type ITeamClient struct {
	mock.Mock
}

// GetTeamsByUser provides a mock function with given fields: ctx, userID
func (_m *ITeamClient) GetTeamsByUser(ctx context.Context, userID string) (dto.TeamsByUserResponse, error) {
	ret := _m.Called(ctx, userID)

	if len(ret) == 0 {
		panic("no return value specified for GetTeamsByUser")
	}

	var r0 dto.TeamsByUserResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (dto.TeamsByUserResponse, error)); ok {
		return rf(ctx, userID)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) dto.TeamsByUserResponse); ok {
		r0 = rf(ctx, userID)
	} else {
		r0 = ret.Get(0).(dto.TeamsByUserResponse)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewITeamClient creates a new instance of ITeamClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewITeamClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *ITeamClient {
	mock := &ITeamClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
